NAME
git@github.com:tdiep26/gw45-threes.git
APCS2 pd9
HW#34 -- GridWorld, Part 4
2014-04-29

Do You Know?
Set 7
1. getActors(); processActors(); getMoveLocations(); selectMoveLocation(); makeMove().
2. a. Gets the actors to process
   b. Processes the actors
   c. Gets locations to move next
   d. Selects the location to move next
   e. Moves to the next location
3. It depends on the type of critter and what actors it affects.
4. Critters can:
   a. Change an actor's color
   b. Make them move
   c. Remove them from the grid
5. a. getMoveLocations(), to find out where it can move
   b. selectMoveLocation(), to find out where it will move
   c. makeMove(), to physically move itself to the chosen location
6. There is no constructor because there are no instance variables that need to be assigned; as a result, the default constructor is used.


Do You Know?
Set 8
1. Even though act() is not overridden, it is different because the methods that it calls (processActors, makeMove) are overridden.
2. It still calls super.makeMove() because it still needs to move like an actor after it changes direction.
3. You can take the block of code from the Bug class:
   Grid<Actor> gr = getGrid(); 
   if (gr == null) 
      return; 
   Location loc = getLocation(); 
   Flower flower = new Flower(getColor()); 
   flower.putSelfInGrid(gr, loc); 
4. It doesn't need to change anything, ChameleonCritter still gets all of its neighboring actors
5. Actor contains getLocation();
6. It can use the getGrid() method from its superclass Actor.

Do You Know?
Set 9
1. CrabCritter doesn't change how it processes its neighbors, only which neighbors it processes. Therefore, processActors() doesn't need to be overridden.
2. CrabCritter only looks at the locations in front and adjacent to itself, and it only eats actors that aren't critters or rocks.
3. It is used because CrabCritter only moves in specific directions, so it only needs to get those locations.
4. (4, 3); (4, 4); (4, 5)
5. Both classes move to random locations in their list of acceptable locations to move, but CrabCritter can only move to its left or right. CrabCritter also turns when it can't move, while Critter just disappears.
6. If it can't move, it turns.
7. They don't eat each other because they are still critters, and critters don't eat each other.

A new type of Critter has appeared on the scene:

BishopCritter Specs:

This critter moves like a bishop: it only moves diagonally in each direction. It also only eats acceptable actors in diagonal locations. Like CrabCritter, it turns if it can't move.

BishopCritter Test Cases:

The only new test cases would be if every diagonal adjacent location were occupied. In this case, the critter would turn 45 degrees to open up a new set of possibilities.
